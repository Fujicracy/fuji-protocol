{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x1920c27D07F9A434ad01C1142BF63c279766e403",
    "txHash": "0x7dedf062c553dde00ddc723d1849c7d052e1db90e15874e896a00aacb84f9356",
    "deployTransaction": {
      "hash": "0x7dedf062c553dde00ddc723d1849c7d052e1db90e15874e896a00aacb84f9356",
      "type": 0,
      "accessList": null,
      "blockHash": "0x0001808300000aebf0617919e9566e2b1a8dc164035d99f55c02799f67ccfaf7",
      "blockNumber": 34898304,
      "transactionIndex": 0,
      "confirmations": 1,
      "from": "0xb98d4D4e205afF4d4755E9Df19BD0B8BD4e0f148",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x3f1efae9e0"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x075da0"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 216,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x9383b33893efc8aab22311c290cc011efbf95741e72c3c9330ec5ca6f73f4c99",
      "s": "0x477fffe9a77131eed6b36dbbceb26917c61788f898d2ad52005d4176f7f41914",
      "v": 536,
      "creates": "0x1920c27D07F9A434ad01C1142BF63c279766e403",
      "chainId": 250
    }
  },
  "proxies": [
    {
      "address": "0xa4e25A3D190AFa0e54609B160391e63B678D0315",
      "txHash": "0x0dc2a2cd6c29448c5c1333126ad80fc98bfc33199108f6413061e14366505adb",
      "kind": "transparent"
    },
    {
      "address": "0x8009A853b00988Ef8E2D7c9E493E1746abdf7A46",
      "txHash": "0x051e32c6a206363bc07c36e65a896b97182f4442ac92ebcbdaae94f9ba0a03a2",
      "kind": "transparent"
    },
    {
      "address": "0x3b9d9D0A953AE2a56F44E4f16D4426562F3137ee",
      "txHash": "0xe9424e654cb0215896909710ebe88aa715eb71288d60d0de1d36eec0c5c810d4",
      "kind": "transparent"
    }
  ],
  "impls": {
    "c1cf8bc4668ff0d9c511f69b276c208015ee2ed5a94df0ca8179952d728971ac": {
      "address": "0x51025D2a5810B21bcE14a69eaf4F2a23fbBdB256",
      "txHash": "0xf4e4ad23398c61d13b10bf2bbfd669b0c2d684e22713cd7799bba830ffbe2f23",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:475"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "NFTGame",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts\\fantom\\nft-bonds\\NFTGame.sol:52"
          },
          {
            "contract": "NFTGame",
            "label": "nftCardsAmount",
            "type": "t_uint256",
            "src": "contracts\\fantom\\nft-bonds\\NFTGame.sol:53"
          },
          {
            "contract": "NFTGame",
            "label": "userdata",
            "type": "t_mapping(t_address,t_struct(UserData)16997_storage)",
            "src": "contracts\\fantom\\nft-bonds\\NFTGame.sol:55"
          },
          {
            "contract": "NFTGame",
            "label": "isClaimed",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\fantom\\nft-bonds\\NFTGame.sol:58"
          },
          {
            "contract": "NFTGame",
            "label": "totalSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\fantom\\nft-bonds\\NFTGame.sol:61"
          },
          {
            "contract": "NFTGame",
            "label": "validVaults",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\fantom\\nft-bonds\\NFTGame.sol:63"
          },
          {
            "contract": "NFTGame",
            "label": "gamePhaseTimestamps",
            "type": "t_array(t_uint256)4_storage",
            "src": "contracts\\fantom\\nft-bonds\\NFTGame.sol:70"
          },
          {
            "contract": "NFTGame",
            "label": "contractURI",
            "type": "t_string_storage",
            "src": "contracts\\fantom\\nft-bonds\\NFTGame.sol:76"
          },
          {
            "contract": "NFTGame",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\fantom\\nft-bonds\\NFTGame.sol:78"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(UserData)16997_storage)": {
            "label": "mapping(address => struct NFTGame.UserData)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UserData)16997_storage": {
            "label": "struct NFTGame.UserData",
            "members": [
              {
                "label": "lastTimestampUpdate",
                "type": "t_uint64"
              },
              {
                "label": "rateOfAccrual",
                "type": "t_uint64"
              },
              {
                "label": "accruedPoints",
                "type": "t_uint128"
              },
              {
                "label": "recordedDebtBalance",
                "type": "t_uint128"
              },
              {
                "label": "lockedNFTID",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2e5b0a9f5609505b93869fb8309ec2b45f0765fb8e307c60a430091a91bcd165": {
      "address": "0xe6b50f024a45B2E1F2bAE1CE17137406B9aC92C0",
      "txHash": "0xcd232df1286f9117e13c7627ca12437e0cfc008531f2e0c404dfeddde08babbb",
      "layout": {
        "storage": [
          {
            "contract": "FujiPriceAware",
            "label": "maxDelay",
            "type": "t_uint256",
            "src": "contracts\\fantom\\nft-bonds\\FujiPriceAware.sol:10"
          },
          {
            "contract": "FujiPriceAware",
            "label": "_trustedSigner",
            "type": "t_address",
            "src": "contracts\\fantom\\nft-bonds\\FujiPriceAware.sol:11"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "NFTInteractions",
            "label": "isRedstoneOracleOn",
            "type": "t_bool",
            "src": "contracts\\fantom\\nft-bonds\\NFTInteractions.sol:68"
          },
          {
            "contract": "NFTInteractions",
            "label": "_crateRewards",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\fantom\\nft-bonds\\NFTInteractions.sol:71"
          },
          {
            "contract": "NFTInteractions",
            "label": "_probabilityIntervals",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\fantom\\nft-bonds\\NFTInteractions.sol:73"
          },
          {
            "contract": "NFTInteractions",
            "label": "nftGame",
            "type": "t_contract(NFTGame)6818",
            "src": "contracts\\fantom\\nft-bonds\\NFTInteractions.sol:75"
          },
          {
            "contract": "NFTInteractions",
            "label": "_pointsID",
            "type": "t_uint256",
            "src": "contracts\\fantom\\nft-bonds\\NFTInteractions.sol:76"
          },
          {
            "contract": "NFTInteractions",
            "label": "_nftgame_GAME_ADMIN",
            "type": "t_bytes32",
            "src": "contracts\\fantom\\nft-bonds\\NFTInteractions.sol:77"
          },
          {
            "contract": "NFTInteractions",
            "label": "preTokenBonds",
            "type": "t_contract(PreTokenBonds)8896",
            "src": "contracts\\fantom\\nft-bonds\\NFTInteractions.sol:79"
          },
          {
            "contract": "NFTInteractions",
            "label": "cratePrices",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\fantom\\nft-bonds\\NFTInteractions.sol:82"
          },
          {
            "contract": "NFTInteractions",
            "label": "cardBoost",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\fantom\\nft-bonds\\NFTInteractions.sol:85"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_contract(NFTGame)6818": {
            "label": "contract NFTGame"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(PreTokenBonds)8896": {
            "label": "contract PreTokenBonds"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "87b8103283778349a3969d714465ee29faa7278cab9454e287d16069e0f3756f": {
      "address": "0xb781Ed19D13638A1F28c7e8988e3855989693AF9",
      "txHash": "0x6106529e4cf9b5ef470edb57a368ec3001ebd71d1d6aaaf59cf697d91fb069db",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "VNFTCoreV2",
            "label": "_units",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\fantom\\nft-bonds\\utils\\VNFTCoreV2.sol:22"
          },
          {
            "contract": "VNFTCoreV2",
            "label": "_tokenApprovalUnits",
            "type": "t_mapping(t_uint256,t_struct(ApproveUnits)20157_storage)",
            "src": "contracts\\fantom\\nft-bonds\\utils\\VNFTCoreV2.sol:25"
          },
          {
            "contract": "VNFTCoreV2",
            "label": "_slotTokens",
            "type": "t_mapping(t_uint256,t_struct(UintSet)6893_storage)",
            "src": "contracts\\fantom\\nft-bonds\\utils\\VNFTCoreV2.sol:28"
          },
          {
            "contract": "VNFTCoreV2",
            "label": "_unitDecimals",
            "type": "t_uint8",
            "src": "contracts\\fantom\\nft-bonds\\utils\\VNFTCoreV2.sol:30"
          },
          {
            "contract": "VoucherCore",
            "label": "voucherSlotMapping",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\fantom\\nft-bonds\\utils\\VoucherCore.sol:25"
          },
          {
            "contract": "VoucherCore",
            "label": "nextTokenId",
            "type": "t_uint32",
            "src": "contracts\\fantom\\nft-bonds\\utils\\VoucherCore.sol:27"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "PreTokenBonds",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\fantom\\nft-bonds\\PreTokenBonds.sol:33"
          },
          {
            "contract": "PreTokenBonds",
            "label": "nftGame",
            "type": "t_contract(NFTGame)18687",
            "src": "contracts\\fantom\\nft-bonds\\PreTokenBonds.sol:35"
          },
          {
            "contract": "PreTokenBonds",
            "label": "_nftgame_GAME_ADMIN",
            "type": "t_bytes32",
            "src": "contracts\\fantom\\nft-bonds\\PreTokenBonds.sol:36"
          },
          {
            "contract": "PreTokenBonds",
            "label": "_nftgame_GAME_INTERACTOR",
            "type": "t_bytes32",
            "src": "contracts\\fantom\\nft-bonds\\PreTokenBonds.sol:37"
          },
          {
            "contract": "PreTokenBonds",
            "label": "underlying",
            "type": "t_address",
            "src": "contracts\\fantom\\nft-bonds\\PreTokenBonds.sol:39"
          },
          {
            "contract": "PreTokenBonds",
            "label": "_bondSlotTimes",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\fantom\\nft-bonds\\PreTokenBonds.sol:41"
          },
          {
            "contract": "PreTokenBonds",
            "label": "bondSlotMultiplier",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\fantom\\nft-bonds\\PreTokenBonds.sol:44"
          },
          {
            "contract": "PreTokenBonds",
            "label": "bondPrice",
            "type": "t_uint256",
            "src": "contracts\\fantom\\nft-bonds\\PreTokenBonds.sol:46"
          },
          {
            "contract": "PreTokenBonds",
            "label": "_tokenBaseURI",
            "type": "t_string_storage",
            "src": "contracts\\fantom\\nft-bonds\\PreTokenBonds.sol:50"
          },
          {
            "contract": "PreTokenBonds",
            "label": "_contractURI",
            "type": "t_string_storage",
            "src": "contracts\\fantom\\nft-bonds\\PreTokenBonds.sol:51"
          },
          {
            "contract": "PreTokenBonds",
            "label": "_slotBaseURI",
            "type": "t_string_storage",
            "src": "contracts\\fantom\\nft-bonds\\PreTokenBonds.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(NFTGame)18687": {
            "label": "contract NFTGame"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_uint256,t_struct(ApproveUnits)20157_storage)": {
            "label": "mapping(uint256 => struct VNFTCoreV2.ApproveUnits)"
          },
          "t_struct(ApproveUnits)20157_storage": {
            "label": "struct VNFTCoreV2.ApproveUnits",
            "members": [
              {
                "label": "approvals",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "allowances",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_struct(UintSet)6893_storage)": {
            "label": "mapping(uint256 => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)6893_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)6435_storage"
              }
            ]
          },
          "t_struct(Set)6435_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
