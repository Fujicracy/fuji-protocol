{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x60A048475Ee20D8fCe3Ef18d4134D4Be7771c204",
    "txHash": "0xe85cf8a28e7e879914a1ddac274a47941aebfb9495a20edf1998333ec27df939",
    "deployTransaction": {
      "hash": "0xe85cf8a28e7e879914a1ddac274a47941aebfb9495a20edf1998333ec27df939",
      "type": 0,
      "accessList": null,
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0xb98d4D4e205afF4d4755E9Df19BD0B8BD4e0f148",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x4e302ffb60"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x075da0"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 17,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x2f0cef03e3fc59f928f465851e36a956224cef80e90dfe798f222b8cab34fbab",
      "s": "0x5d1e1bb5657a7ad054f2adef8fac1e67a6c6cc0215117d5e6cdb3daf96ee9219",
      "v": 535,
      "creates": "0x60A048475Ee20D8fCe3Ef18d4134D4Be7771c204",
      "chainId": 250
    }
  },
  "proxies": [
    {
      "address": "0xaAb2AAfBFf7419Ff85181d3A846bA9045803dd67",
      "txHash": "0x75a18ab0576f445fa32184c467bfc524500ee4e8c6bdf6447d13e7895db1d54c",
      "kind": "transparent"
    },
    {
      "address": "0xB4E2eC87f8E6E166929A900Ed433c4589d721D70",
      "txHash": "0x08165b7e9518f365222a1bcb25f43a42c69717a8de1625d95aeacca84eeb9576",
      "kind": "transparent"
    },
    {
      "address": "0x67908BE314DE4A16AD34f401f5d99e061DFE7334",
      "txHash": "0x5ccafe4b865a6dd041b0c75b0b8ea03b0611dc0042135053d3d28d2255dc4f1e",
      "kind": "transparent"
    },
    {
      "address": "0x085a99366861bd9c0B040b8Ad3882ab44327617e",
      "txHash": "0xea58c265b8c53a686f01c596d6c1c5ef5e70ede8d1b33649dbc46fa49630c78b",
      "kind": "transparent"
    },
    {
      "address": "0xca49CB6964ABDC38486D2BD4f5040fe0D204da53",
      "txHash": "0x2da0dc72050a7d8969c680a8d651ed822163766ea3de9c4f0dd5eca32507732e",
      "kind": "transparent"
    },
    {
      "address": "0xcb2A80380206c5bF2AAd4A0fAB2b2C31A59C208B",
      "txHash": "0x1e7263834106657f5e439e17eae72889654a07270b52988d409ae5e29dcf7d5e",
      "kind": "transparent"
    },
    {
      "address": "0x1bAc9447611b5d1D763906dC60269Ac61E04CD4B",
      "txHash": "0x7b9d9789c0f3cd3c3cd2a8a1a2473965885a4510993db0e33f42fc2206f46c41",
      "kind": "transparent"
    },
    {
      "address": "0x0793Cf99906423AaF17c736dcAcBFE843931686a",
      "txHash": "0xa9d76620c917a37935a51e4669eab6223ab741f47f4922dae671608f2ad19640",
      "kind": "transparent"
    },
    {
      "address": "0xa4e25A3D190AFa0e54609B160391e63B678D0315",
      "txHash": "0x0dc2a2cd6c29448c5c1333126ad80fc98bfc33199108f6413061e14366505adb",
      "kind": "transparent"
    },
    {
      "address": "0x8009A853b00988Ef8E2D7c9E493E1746abdf7A46",
      "txHash": "0x051e32c6a206363bc07c36e65a896b97182f4442ac92ebcbdaae94f9ba0a03a2",
      "kind": "transparent"
    },
    {
      "address": "0x3b9d9D0A953AE2a56F44E4f16D4426562F3137ee",
      "txHash": "0xe9424e654cb0215896909710ebe88aa715eb71288d60d0de1d36eec0c5c810d4",
      "kind": "transparent"
    },
    {
      "address": "0x14b35FBC82b3A3b95843062b96861ddBdEEFaEE0",
      "txHash": "0x7312724111ce209793b8c99e67c1320000993d9197eac4ef84abdbb85c9dad7c",
      "kind": "transparent"
    },
    {
      "address": "0xD3B69dB6322dBA2BF24E0f6201c79a59757c80bd",
      "txHash": "0x73dfe39462fb95a43d8ca8bdddfeec89fc7e65461d3d217f5cb79841d5929634",
      "kind": "transparent"
    },
    {
      "address": "0x4A58e09ac70C856F8115222811a69C991213D8C3",
      "txHash": "0xa1b3d93e643535f3830dc8fa616ed29eef6aa5a03e7be34d0748933e0eec2e44",
      "kind": "transparent"
    }
  ],
  "impls": {
    "d843a782bac05ba348626a7a67f58791f6d003bb17c2fe319dba87551ae6ca56": {
      "address": "0x749a2A8850C1861aFa1003D876d90C9b730cA58e",
      "txHash": "0xc865f75817be3e462da7ed051457dcadfdd2d223d7a191374cdb5a6fec331044",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "FujiAdmin",
            "label": "_flasher",
            "type": "t_address",
            "src": "contracts/FujiAdmin.sol:11"
          },
          {
            "contract": "FujiAdmin",
            "label": "_fliquidator",
            "type": "t_address",
            "src": "contracts/FujiAdmin.sol:12"
          },
          {
            "contract": "FujiAdmin",
            "label": "_ftreasury",
            "type": "t_address_payable",
            "src": "contracts/FujiAdmin.sol:13"
          },
          {
            "contract": "FujiAdmin",
            "label": "_controller",
            "type": "t_address",
            "src": "contracts/FujiAdmin.sol:14"
          },
          {
            "contract": "FujiAdmin",
            "label": "_vaultHarvester",
            "type": "t_address",
            "src": "contracts/FujiAdmin.sol:15"
          },
          {
            "contract": "FujiAdmin",
            "label": "validVault",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/FujiAdmin.sol:17"
          },
          {
            "contract": "FujiAdmin",
            "label": "_swapper",
            "type": "t_address",
            "src": "contracts/FujiAdmin.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "86ff3faca9241dff633ddd0094916d448862957b339dad82eda559da09728308": {
      "address": "0xd0dc4Cc10fCf3fEe2bF5310c0E4e097b60F097D3",
      "txHash": "0x484fb81bac189848366093884f653a76f43c7a9cdb9c55ef0208c9d7604e049c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "FujiBaseERC1155",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/abstracts/fujiERC1155/FujiBaseERC1155.sol:27"
          },
          {
            "contract": "FujiBaseERC1155",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/abstracts/fujiERC1155/FujiBaseERC1155.sol:30"
          },
          {
            "contract": "FujiBaseERC1155",
            "label": "_totalSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/abstracts/fujiERC1155/FujiBaseERC1155.sol:33"
          },
          {
            "contract": "FujiBaseERC1155",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "contracts/abstracts/fujiERC1155/FujiBaseERC1155.sol:37"
          },
          {
            "contract": "ClaimableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts/abstracts/claimable/ClaimableUpgradeable.sol:9"
          },
          {
            "contract": "ClaimableUpgradeable",
            "label": "pendingOwner",
            "type": "t_address",
            "src": "contracts/abstracts/claimable/ClaimableUpgradeable.sol:10"
          },
          {
            "contract": "F1155Manager",
            "label": "addrPermit",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/abstracts/fujiERC1155/F1155Manager.sol:17"
          },
          {
            "contract": "FujiERC1155",
            "label": "assetIDs",
            "type": "t_mapping(t_enum(AssetType)10920,t_mapping(t_address,t_uint256))",
            "src": "contracts/FujiERC1155.sol:18"
          },
          {
            "contract": "FujiERC1155",
            "label": "assetIDtype",
            "type": "t_mapping(t_uint256,t_enum(AssetType)10920)",
            "src": "contracts/FujiERC1155.sol:21"
          },
          {
            "contract": "FujiERC1155",
            "label": "qtyOfManagedAssets",
            "type": "t_uint64",
            "src": "contracts/FujiERC1155.sol:23"
          },
          {
            "contract": "FujiERC1155",
            "label": "indexes",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/FujiERC1155.sol:27"
          }
        ],
        "types": {
          "t_mapping(t_enum(AssetType)10920,t_mapping(t_address,t_uint256))": {
            "label": "mapping(enum IFujiERC1155.AssetType => mapping(address => uint256))"
          },
          "t_enum(AssetType)10920": {
            "label": "enum IFujiERC1155.AssetType",
            "members": [
              "collateralToken",
              "debtToken"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_enum(AssetType)10920)": {
            "label": "mapping(uint256 => enum IFujiERC1155.AssetType)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e73f68ad597f1bc8bfc0bc0ec8e04ccca04208fc15d091fdfa18f5a947d74147": {
      "address": "0x8513C2DB99df213887F63300b23c6Dd31f1d14B0",
      "txHash": "0x05a5888b2f138e17730048181019aa1f83116512fb039c36bed2124190b625ce",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "VaultControlUpgradeable",
            "label": "vAssets",
            "type": "t_struct(VaultAssets)11293_storage",
            "src": "contracts/abstracts/vault/VaultBaseUpgradeable.sol:12"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "safetyF",
            "type": "t_struct(Factor)6861_storage",
            "src": "contracts/fantom/FujiVaultFTM.sol:35"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "collatF",
            "type": "t_struct(Factor)6861_storage",
            "src": "contracts/fantom/FujiVaultFTM.sol:38"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "protocolFee",
            "type": "t_struct(Factor)6861_storage",
            "src": "contracts/fantom/FujiVaultFTM.sol:41"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "bonusLiqF",
            "type": "t_struct(Factor)6861_storage",
            "src": "contracts/fantom/FujiVaultFTM.sol:44"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "providers",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/fantom/FujiVaultFTM.sol:47"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "activeProvider",
            "type": "t_address",
            "src": "contracts/fantom/FujiVaultFTM.sol:48"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "_fujiAdmin",
            "type": "t_contract(IFujiAdmin)10915",
            "src": "contracts/fantom/FujiVaultFTM.sol:50"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "fujiERC1155",
            "type": "t_address",
            "src": "contracts/fantom/FujiVaultFTM.sol:51"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "oracle",
            "type": "t_contract(IFujiOracle)11006",
            "src": "contracts/fantom/FujiVaultFTM.sol:52"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "name",
            "type": "t_string_storage",
            "src": "contracts/fantom/FujiVaultFTM.sol:54"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "_collateralAssetDecimals",
            "type": "t_uint8",
            "src": "contracts/fantom/FujiVaultFTM.sol:56"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "_borrowAssetDecimals",
            "type": "t_uint8",
            "src": "contracts/fantom/FujiVaultFTM.sol:57"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "_userFeeTimestamps",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/fantom/FujiVaultFTM.sol:61"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "remainingProtocolFee",
            "type": "t_uint256",
            "src": "contracts/fantom/FujiVaultFTM.sol:62"
          }
        ],
        "types": {
          "t_struct(Factor)6861_storage": {
            "label": "struct FujiVaultFTM.Factor",
            "members": [
              {
                "label": "a",
                "type": "t_uint64"
              },
              {
                "label": "b",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IFujiAdmin)10915": {
            "label": "contract IFujiAdmin"
          },
          "t_contract(IFujiOracle)11006": {
            "label": "contract IFujiOracle"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(VaultAssets)11293_storage": {
            "label": "struct IVaultControl.VaultAssets",
            "members": [
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "borrowAsset",
                "type": "t_address"
              },
              {
                "label": "collateralID",
                "type": "t_uint64"
              },
              {
                "label": "borrowID",
                "type": "t_uint64"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "cf10405ef279d649cf85d04779e2da9ab8b1cdf825026df0ba42e035272da84f": {
      "address": "0x73AF71612aAB4D18D55344Dba95Ea8d6DEe78b80",
      "txHash": "0xabf49be7c80119f38525d9451e6d9c6454c17c478d6f592096ebf6750204e8c4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "VaultControlUpgradeable",
            "label": "vAssets",
            "type": "t_struct(VaultAssets)12374_storage",
            "src": "contracts\\abstracts\\vault\\VaultBaseUpgradeable.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "safetyF",
            "type": "t_struct(Factor)12238_storage",
            "src": "contracts\\fantom\\FujiVaultFTM.sol:36"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "collatF",
            "type": "t_struct(Factor)12238_storage",
            "src": "contracts\\fantom\\FujiVaultFTM.sol:39"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "protocolFee",
            "type": "t_struct(Factor)12238_storage",
            "src": "contracts\\fantom\\FujiVaultFTM.sol:42"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "bonusLiqF",
            "type": "t_struct(Factor)12238_storage",
            "src": "contracts\\fantom\\FujiVaultFTM.sol:45"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "providers",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\fantom\\FujiVaultFTM.sol:48"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "activeProvider",
            "type": "t_address",
            "src": "contracts\\fantom\\FujiVaultFTM.sol:49"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "_fujiAdmin",
            "type": "t_contract(IFujiAdmin)11898",
            "src": "contracts\\fantom\\FujiVaultFTM.sol:51"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "fujiERC1155",
            "type": "t_address",
            "src": "contracts\\fantom\\FujiVaultFTM.sol:52"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "oracle",
            "type": "t_contract(IFujiOracle)12032",
            "src": "contracts\\fantom\\FujiVaultFTM.sol:53"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "name",
            "type": "t_string_storage",
            "src": "contracts\\fantom\\FujiVaultFTM.sol:55"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "_collateralAssetDecimals",
            "type": "t_uint8",
            "src": "contracts\\fantom\\FujiVaultFTM.sol:57"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "_borrowAssetDecimals",
            "type": "t_uint8",
            "src": "contracts\\fantom\\FujiVaultFTM.sol:58"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "_userFeeTimestamps",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\fantom\\FujiVaultFTM.sol:62"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "remainingProtocolFee",
            "type": "t_uint256",
            "src": "contracts\\fantom\\FujiVaultFTM.sol:63"
          }
        ],
        "types": {
          "t_struct(Factor)12238_storage": {
            "label": "struct IVault.Factor",
            "members": [
              {
                "label": "a",
                "type": "t_uint64"
              },
              {
                "label": "b",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IFujiAdmin)11898": {
            "label": "contract IFujiAdmin"
          },
          "t_contract(IFujiOracle)12032": {
            "label": "contract IFujiOracle"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(VaultAssets)12374_storage": {
            "label": "struct IVaultControl.VaultAssets",
            "members": [
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "borrowAsset",
                "type": "t_address"
              },
              {
                "label": "collateralID",
                "type": "t_uint64"
              },
              {
                "label": "borrowID",
                "type": "t_uint64"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "abc990aa92b8eaf6372d47bb1f162dcf1bda8514759edbbae21e3052bd4c91b6": {
      "address": "0x45fbFD9742e63649b3AEF6A37200E9f3Ff9f9aCa",
      "txHash": "0xa76ca73278be2d61b2c6ece7ba86679410e2fcb4ce625bcd75da44ed0ca964a9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:77"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "VaultControlUpgradeable",
            "label": "vAssets",
            "type": "t_struct(VaultAssets)12384_storage",
            "src": "contracts\\abstracts\\vault\\VaultBaseUpgradeable.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "safetyF",
            "type": "t_struct(Factor)12248_storage",
            "src": "contracts\\fantom\\FujiVaultFTM.sol:36"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "collatF",
            "type": "t_struct(Factor)12248_storage",
            "src": "contracts\\fantom\\FujiVaultFTM.sol:39"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "protocolFee",
            "type": "t_struct(Factor)12248_storage",
            "src": "contracts\\fantom\\FujiVaultFTM.sol:42"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "bonusLiqF",
            "type": "t_struct(Factor)12248_storage",
            "src": "contracts\\fantom\\FujiVaultFTM.sol:45"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "providers",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\fantom\\FujiVaultFTM.sol:48"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "activeProvider",
            "type": "t_address",
            "src": "contracts\\fantom\\FujiVaultFTM.sol:49"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "_fujiAdmin",
            "type": "t_contract(IFujiAdmin)11934",
            "src": "contracts\\fantom\\FujiVaultFTM.sol:51"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "fujiERC1155",
            "type": "t_address",
            "src": "contracts\\fantom\\FujiVaultFTM.sol:52"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "oracle",
            "type": "t_contract(IFujiOracle)12042",
            "src": "contracts\\fantom\\FujiVaultFTM.sol:53"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "name",
            "type": "t_string_storage",
            "src": "contracts\\fantom\\FujiVaultFTM.sol:55"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "_collateralAssetDecimals",
            "type": "t_uint8",
            "src": "contracts\\fantom\\FujiVaultFTM.sol:57"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "_borrowAssetDecimals",
            "type": "t_uint8",
            "src": "contracts\\fantom\\FujiVaultFTM.sol:58"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "_userFeeTimestamps",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\fantom\\FujiVaultFTM.sol:62"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "remainingProtocolFee",
            "type": "t_uint256",
            "src": "contracts\\fantom\\FujiVaultFTM.sol:63"
          }
        ],
        "types": {
          "t_struct(Factor)12248_storage": {
            "label": "struct IVault.Factor",
            "members": [
              {
                "label": "a",
                "type": "t_uint64"
              },
              {
                "label": "b",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IFujiAdmin)11934": {
            "label": "contract IFujiAdmin"
          },
          "t_contract(IFujiOracle)12042": {
            "label": "contract IFujiOracle"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(VaultAssets)12384_storage": {
            "label": "struct IVaultControl.VaultAssets",
            "members": [
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "borrowAsset",
                "type": "t_address"
              },
              {
                "label": "collateralID",
                "type": "t_uint64"
              },
              {
                "label": "borrowID",
                "type": "t_uint64"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e4d7db92d15fd816e1bb95ab53e2397b298684f1f7c89df698632e6f06cd5997": {
      "address": "0x5110Ec1e9f9Ee08ea8B884EB3be4FaACE8960fd8",
      "txHash": "0xafc28574e44417d41bb7e3c27594e1b678202125d8550ee3577c39c1a430e427",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "VaultControlUpgradeable",
            "label": "vAssets",
            "type": "t_struct(VaultAssets)24290_storage",
            "src": "contracts/abstracts/vault/VaultBaseUpgradeable.sol:20"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "safetyF",
            "type": "t_struct(Factor)24154_storage",
            "src": "contracts/fantom/FujiVaultFTM.sol:42"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "collatF",
            "type": "t_struct(Factor)24154_storage",
            "src": "contracts/fantom/FujiVaultFTM.sol:45"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "protocolFee",
            "type": "t_struct(Factor)24154_storage",
            "src": "contracts/fantom/FujiVaultFTM.sol:48"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "bonusLiqF",
            "type": "t_struct(Factor)24154_storage",
            "src": "contracts/fantom/FujiVaultFTM.sol:51"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "providers",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/fantom/FujiVaultFTM.sol:54"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "activeProvider",
            "type": "t_address",
            "src": "contracts/fantom/FujiVaultFTM.sol:55"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "_fujiAdmin",
            "type": "t_contract(IFujiAdmin)23814",
            "src": "contracts/fantom/FujiVaultFTM.sol:57"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "fujiERC1155",
            "type": "t_address",
            "src": "contracts/fantom/FujiVaultFTM.sol:58"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "oracle",
            "type": "t_contract(IFujiOracle)23948",
            "src": "contracts/fantom/FujiVaultFTM.sol:59"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "name",
            "type": "t_string_storage",
            "src": "contracts/fantom/FujiVaultFTM.sol:61"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "_collateralAssetDecimals",
            "type": "t_uint8",
            "src": "contracts/fantom/FujiVaultFTM.sol:63"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "_borrowAssetDecimals",
            "type": "t_uint8",
            "src": "contracts/fantom/FujiVaultFTM.sol:64"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "_userFeeTimestamps",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/fantom/FujiVaultFTM.sol:68"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "remainingProtocolFee",
            "type": "t_uint256",
            "src": "contracts/fantom/FujiVaultFTM.sol:69"
          },
          {
            "contract": "FujiVaultFTM",
            "label": "nftGame",
            "type": "t_address",
            "src": "contracts/fantom/FujiVaultFTM.sol:71"
          }
        ],
        "types": {
          "t_struct(Factor)24154_storage": {
            "label": "struct IVault.Factor",
            "members": [
              {
                "label": "a",
                "type": "t_uint64"
              },
              {
                "label": "b",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IFujiAdmin)23814": {
            "label": "contract IFujiAdmin"
          },
          "t_contract(IFujiOracle)23948": {
            "label": "contract IFujiOracle"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_struct(VaultAssets)24290_storage": {
            "label": "struct IVaultControl.VaultAssets",
            "members": [
              {
                "label": "collateralAsset",
                "type": "t_address"
              },
              {
                "label": "borrowAsset",
                "type": "t_address"
              },
              {
                "label": "collateralID",
                "type": "t_uint64"
              },
              {
                "label": "borrowID",
                "type": "t_uint64"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6daac48a47278ac5c178ef741282d59db614b0318c7b2e4aa2b06704ed45ca26": {
      "address": "0xB19EFA287ee9dc9f399AB53F6F923A29E0f0B480",
      "txHash": "0xdd1162b3826296cac2f6e4c39d7c14338e874375909df6a8bb61af1cceeead3e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "FujiBaseERC1155",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "contracts/abstracts/fujiERC1155/FujiBaseERC1155.sol:34"
          },
          {
            "contract": "FujiBaseERC1155",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/abstracts/fujiERC1155/FujiBaseERC1155.sol:37"
          },
          {
            "contract": "FujiBaseERC1155",
            "label": "_totalSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/abstracts/fujiERC1155/FujiBaseERC1155.sol:40"
          },
          {
            "contract": "FujiBaseERC1155",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "contracts/abstracts/fujiERC1155/FujiBaseERC1155.sol:44"
          },
          {
            "contract": "ClaimableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts/abstracts/claimable/ClaimableUpgradeable.sol:13"
          },
          {
            "contract": "ClaimableUpgradeable",
            "label": "pendingOwner",
            "type": "t_address",
            "src": "contracts/abstracts/claimable/ClaimableUpgradeable.sol:15"
          },
          {
            "contract": "F1155Manager",
            "label": "addrPermit",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/abstracts/fujiERC1155/F1155Manager.sol:29"
          },
          {
            "contract": "FujiERC1155",
            "label": "assetIDs",
            "type": "t_mapping(t_enum(AssetType)23819,t_mapping(t_address,t_uint256))",
            "src": "contracts/FujiERC1155.sol:25"
          },
          {
            "contract": "FujiERC1155",
            "label": "assetIDtype",
            "type": "t_mapping(t_uint256,t_enum(AssetType)23819)",
            "src": "contracts/FujiERC1155.sol:28"
          },
          {
            "contract": "FujiERC1155",
            "label": "qtyOfManagedAssets",
            "type": "t_uint64",
            "src": "contracts/FujiERC1155.sol:30"
          },
          {
            "contract": "FujiERC1155",
            "label": "indexes",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/FujiERC1155.sol:34"
          }
        ],
        "types": {
          "t_mapping(t_enum(AssetType)23819,t_mapping(t_address,t_uint256))": {
            "label": "mapping(enum IFujiERC1155.AssetType => mapping(address => uint256))"
          },
          "t_enum(AssetType)23819": {
            "label": "enum IFujiERC1155.AssetType",
            "members": [
              "collateralToken",
              "debtToken"
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_enum(AssetType)23819)": {
            "label": "mapping(uint256 => enum IFujiERC1155.AssetType)"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c1cf8bc4668ff0d9c511f69b276c208015ee2ed5a94df0ca8179952d728971ac": {
      "address": "0x51025D2a5810B21bcE14a69eaf4F2a23fbBdB256",
      "txHash": "0xf4e4ad23398c61d13b10bf2bbfd669b0c2d684e22713cd7799bba830ffbe2f23",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:475"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "NFTGame",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts\\fantom\\nft-bonds\\NFTGame.sol:52"
          },
          {
            "contract": "NFTGame",
            "label": "nftCardsAmount",
            "type": "t_uint256",
            "src": "contracts\\fantom\\nft-bonds\\NFTGame.sol:53"
          },
          {
            "contract": "NFTGame",
            "label": "userdata",
            "type": "t_mapping(t_address,t_struct(UserData)16997_storage)",
            "src": "contracts\\fantom\\nft-bonds\\NFTGame.sol:55"
          },
          {
            "contract": "NFTGame",
            "label": "isClaimed",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\fantom\\nft-bonds\\NFTGame.sol:58"
          },
          {
            "contract": "NFTGame",
            "label": "totalSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\fantom\\nft-bonds\\NFTGame.sol:61"
          },
          {
            "contract": "NFTGame",
            "label": "validVaults",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\fantom\\nft-bonds\\NFTGame.sol:63"
          },
          {
            "contract": "NFTGame",
            "label": "gamePhaseTimestamps",
            "type": "t_array(t_uint256)4_storage",
            "src": "contracts\\fantom\\nft-bonds\\NFTGame.sol:70"
          },
          {
            "contract": "NFTGame",
            "label": "contractURI",
            "type": "t_string_storage",
            "src": "contracts\\fantom\\nft-bonds\\NFTGame.sol:76"
          },
          {
            "contract": "NFTGame",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\fantom\\nft-bonds\\NFTGame.sol:78"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(UserData)16997_storage)": {
            "label": "mapping(address => struct NFTGame.UserData)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UserData)16997_storage": {
            "label": "struct NFTGame.UserData",
            "members": [
              {
                "label": "lastTimestampUpdate",
                "type": "t_uint64"
              },
              {
                "label": "rateOfAccrual",
                "type": "t_uint64"
              },
              {
                "label": "accruedPoints",
                "type": "t_uint128"
              },
              {
                "label": "recordedDebtBalance",
                "type": "t_uint128"
              },
              {
                "label": "lockedNFTID",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2e5b0a9f5609505b93869fb8309ec2b45f0765fb8e307c60a430091a91bcd165": {
      "address": "0xe6b50f024a45B2E1F2bAE1CE17137406B9aC92C0",
      "txHash": "0xcd232df1286f9117e13c7627ca12437e0cfc008531f2e0c404dfeddde08babbb",
      "layout": {
        "storage": [
          {
            "contract": "FujiPriceAware",
            "label": "maxDelay",
            "type": "t_uint256",
            "src": "contracts/fantom/nft-bonds/FujiPriceAware.sol:10"
          },
          {
            "contract": "FujiPriceAware",
            "label": "_trustedSigner",
            "type": "t_address",
            "src": "contracts/fantom/nft-bonds/FujiPriceAware.sol:11"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "NFTInteractions",
            "label": "isRedstoneOracleOn",
            "type": "t_bool",
            "src": "contracts/fantom/nft-bonds/NFTInteractions.sol:68"
          },
          {
            "contract": "NFTInteractions",
            "label": "_crateRewards",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/fantom/nft-bonds/NFTInteractions.sol:71"
          },
          {
            "contract": "NFTInteractions",
            "label": "_probabilityIntervals",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/fantom/nft-bonds/NFTInteractions.sol:73"
          },
          {
            "contract": "NFTInteractions",
            "label": "nftGame",
            "type": "t_contract(NFTGame)6818",
            "src": "contracts/fantom/nft-bonds/NFTInteractions.sol:75"
          },
          {
            "contract": "NFTInteractions",
            "label": "_pointsID",
            "type": "t_uint256",
            "src": "contracts/fantom/nft-bonds/NFTInteractions.sol:76"
          },
          {
            "contract": "NFTInteractions",
            "label": "_nftgame_GAME_ADMIN",
            "type": "t_bytes32",
            "src": "contracts/fantom/nft-bonds/NFTInteractions.sol:77"
          },
          {
            "contract": "NFTInteractions",
            "label": "preTokenBonds",
            "type": "t_contract(PreTokenBonds)8896",
            "src": "contracts/fantom/nft-bonds/NFTInteractions.sol:79"
          },
          {
            "contract": "NFTInteractions",
            "label": "cratePrices",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/fantom/nft-bonds/NFTInteractions.sol:82"
          },
          {
            "contract": "NFTInteractions",
            "label": "cardBoost",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/fantom/nft-bonds/NFTInteractions.sol:85"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_contract(NFTGame)6818": {
            "label": "contract NFTGame"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(PreTokenBonds)8896": {
            "label": "contract PreTokenBonds"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "87b8103283778349a3969d714465ee29faa7278cab9454e287d16069e0f3756f": {
      "address": "0xb781Ed19D13638A1F28c7e8988e3855989693AF9",
      "txHash": "0x6106529e4cf9b5ef470edb57a368ec3001ebd71d1d6aaaf59cf697d91fb069db",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "VNFTCoreV2",
            "label": "_units",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\fantom\\nft-bonds\\utils\\VNFTCoreV2.sol:22"
          },
          {
            "contract": "VNFTCoreV2",
            "label": "_tokenApprovalUnits",
            "type": "t_mapping(t_uint256,t_struct(ApproveUnits)20157_storage)",
            "src": "contracts\\fantom\\nft-bonds\\utils\\VNFTCoreV2.sol:25"
          },
          {
            "contract": "VNFTCoreV2",
            "label": "_slotTokens",
            "type": "t_mapping(t_uint256,t_struct(UintSet)6893_storage)",
            "src": "contracts\\fantom\\nft-bonds\\utils\\VNFTCoreV2.sol:28"
          },
          {
            "contract": "VNFTCoreV2",
            "label": "_unitDecimals",
            "type": "t_uint8",
            "src": "contracts\\fantom\\nft-bonds\\utils\\VNFTCoreV2.sol:30"
          },
          {
            "contract": "VoucherCore",
            "label": "voucherSlotMapping",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\fantom\\nft-bonds\\utils\\VoucherCore.sol:25"
          },
          {
            "contract": "VoucherCore",
            "label": "nextTokenId",
            "type": "t_uint32",
            "src": "contracts\\fantom\\nft-bonds\\utils\\VoucherCore.sol:27"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "PreTokenBonds",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\fantom\\nft-bonds\\PreTokenBonds.sol:33"
          },
          {
            "contract": "PreTokenBonds",
            "label": "nftGame",
            "type": "t_contract(NFTGame)18687",
            "src": "contracts\\fantom\\nft-bonds\\PreTokenBonds.sol:35"
          },
          {
            "contract": "PreTokenBonds",
            "label": "_nftgame_GAME_ADMIN",
            "type": "t_bytes32",
            "src": "contracts\\fantom\\nft-bonds\\PreTokenBonds.sol:36"
          },
          {
            "contract": "PreTokenBonds",
            "label": "_nftgame_GAME_INTERACTOR",
            "type": "t_bytes32",
            "src": "contracts\\fantom\\nft-bonds\\PreTokenBonds.sol:37"
          },
          {
            "contract": "PreTokenBonds",
            "label": "underlying",
            "type": "t_address",
            "src": "contracts\\fantom\\nft-bonds\\PreTokenBonds.sol:39"
          },
          {
            "contract": "PreTokenBonds",
            "label": "_bondSlotTimes",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\fantom\\nft-bonds\\PreTokenBonds.sol:41"
          },
          {
            "contract": "PreTokenBonds",
            "label": "bondSlotMultiplier",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\fantom\\nft-bonds\\PreTokenBonds.sol:44"
          },
          {
            "contract": "PreTokenBonds",
            "label": "bondPrice",
            "type": "t_uint256",
            "src": "contracts\\fantom\\nft-bonds\\PreTokenBonds.sol:46"
          },
          {
            "contract": "PreTokenBonds",
            "label": "_tokenBaseURI",
            "type": "t_string_storage",
            "src": "contracts\\fantom\\nft-bonds\\PreTokenBonds.sol:50"
          },
          {
            "contract": "PreTokenBonds",
            "label": "_contractURI",
            "type": "t_string_storage",
            "src": "contracts\\fantom\\nft-bonds\\PreTokenBonds.sol:51"
          },
          {
            "contract": "PreTokenBonds",
            "label": "_slotBaseURI",
            "type": "t_string_storage",
            "src": "contracts\\fantom\\nft-bonds\\PreTokenBonds.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(NFTGame)18687": {
            "label": "contract NFTGame"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_uint256,t_struct(ApproveUnits)20157_storage)": {
            "label": "mapping(uint256 => struct VNFTCoreV2.ApproveUnits)"
          },
          "t_struct(ApproveUnits)20157_storage": {
            "label": "struct VNFTCoreV2.ApproveUnits",
            "members": [
              {
                "label": "approvals",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "allowances",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_struct(UintSet)6893_storage)": {
            "label": "mapping(uint256 => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)6893_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)6435_storage"
              }
            ]
          },
          "t_struct(Set)6435_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b2b56a2b55452632e1acd69c5cde30d0c8ede68e5de9e19c6064444beb57f382": {
      "address": "0xE3A8ECEdAf11cA4d5B5344C26748ffb3DA2bB624",
      "txHash": "0x6f77f28f70ebad4c644e25294d7373b0e497bd55ba5b45231e919d334abe3fce",
      "layout": {
        "storage": [
          {
            "contract": "FujiPriceAware",
            "label": "maxDelay",
            "type": "t_uint256",
            "src": "contracts/fantom/nft-bonds/FujiPriceAware.sol:10"
          },
          {
            "contract": "FujiPriceAware",
            "label": "_trustedSigner",
            "type": "t_address",
            "src": "contracts/fantom/nft-bonds/FujiPriceAware.sol:11"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "NFTInteractions",
            "label": "isRedstoneOracleOn",
            "type": "t_bool",
            "src": "contracts/fantom/nft-bonds/NFTInteractions.sol:68"
          },
          {
            "contract": "NFTInteractions",
            "label": "_crateRewards",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts/fantom/nft-bonds/NFTInteractions.sol:71"
          },
          {
            "contract": "NFTInteractions",
            "label": "_probabilityIntervals",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/fantom/nft-bonds/NFTInteractions.sol:73"
          },
          {
            "contract": "NFTInteractions",
            "label": "nftGame",
            "type": "t_contract(NFTGame)6818",
            "src": "contracts/fantom/nft-bonds/NFTInteractions.sol:75"
          },
          {
            "contract": "NFTInteractions",
            "label": "_pointsID",
            "type": "t_uint256",
            "src": "contracts/fantom/nft-bonds/NFTInteractions.sol:76"
          },
          {
            "contract": "NFTInteractions",
            "label": "_nftgame_GAME_ADMIN",
            "type": "t_bytes32",
            "src": "contracts/fantom/nft-bonds/NFTInteractions.sol:77"
          },
          {
            "contract": "NFTInteractions",
            "label": "preTokenBonds",
            "type": "t_contract(PreTokenBonds)8896",
            "src": "contracts/fantom/nft-bonds/NFTInteractions.sol:79"
          },
          {
            "contract": "NFTInteractions",
            "label": "cratePrices",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/fantom/nft-bonds/NFTInteractions.sol:82"
          },
          {
            "contract": "NFTInteractions",
            "label": "cardBoost",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/fantom/nft-bonds/NFTInteractions.sol:85"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_contract(NFTGame)6818": {
            "label": "contract NFTGame"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(PreTokenBonds)8896": {
            "label": "contract PreTokenBonds"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "e43193582b8959ad25a0e580e91685d01cf9fcb1ca72c567038c6fb7ae973ef1": {
      "address": "0x8B88CB8D390CCDDF697A28748AF4968a38B03738",
      "txHash": "0xe038f71cd2f91fd0c289bd8ec5fe622e9ec190d8b87d2195a651c867129e790a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:475"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "NFTGame",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts\\fantom\\nft-bonds\\NFTGame.sol:67"
          },
          {
            "contract": "NFTGame",
            "label": "nftCardsAmount",
            "type": "t_uint256",
            "src": "contracts\\fantom\\nft-bonds\\NFTGame.sol:68"
          },
          {
            "contract": "NFTGame",
            "label": "userdata",
            "type": "t_mapping(t_address,t_struct(UserData)17934_storage)",
            "src": "contracts\\fantom\\nft-bonds\\NFTGame.sol:70"
          },
          {
            "contract": "NFTGame",
            "label": "isClaimed",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\fantom\\nft-bonds\\NFTGame.sol:73"
          },
          {
            "contract": "NFTGame",
            "label": "totalSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\fantom\\nft-bonds\\NFTGame.sol:76"
          },
          {
            "contract": "NFTGame",
            "label": "validVaults",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\fantom\\nft-bonds\\NFTGame.sol:79"
          },
          {
            "contract": "NFTGame",
            "label": "gamePhaseTimestamps",
            "type": "t_array(t_uint256)4_storage",
            "src": "contracts\\fantom\\nft-bonds\\NFTGame.sol:86"
          },
          {
            "contract": "NFTGame",
            "label": "lockNFTdesc",
            "type": "t_contract(ILockNFTDescriptor)21110",
            "src": "contracts\\fantom\\nft-bonds\\NFTGame.sol:88"
          },
          {
            "contract": "NFTGame",
            "label": "contractURI",
            "type": "t_string_storage",
            "src": "contracts\\fantom\\nft-bonds\\NFTGame.sol:94"
          },
          {
            "contract": "NFTGame",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\fantom\\nft-bonds\\NFTGame.sol:96"
          },
          {
            "contract": "NFTGame",
            "label": "numPlayers",
            "type": "t_uint256",
            "src": "contracts\\fantom\\nft-bonds\\NFTGame.sol:98"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(UserData)17934_storage)": {
            "label": "mapping(address => struct NFTGame.UserData)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UserData)17934_storage": {
            "label": "struct NFTGame.UserData",
            "members": [
              {
                "label": "lastTimestampUpdate",
                "type": "t_uint64"
              },
              {
                "label": "rateOfAccrual",
                "type": "t_uint64"
              },
              {
                "label": "accruedPoints",
                "type": "t_uint128"
              },
              {
                "label": "recordedDebtBalance",
                "type": "t_uint128"
              },
              {
                "label": "finalScore",
                "type": "t_uint128"
              },
              {
                "label": "gearsCollected",
                "type": "t_uint128"
              },
              {
                "label": "lockedNFTID",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]"
          },
          "t_contract(ILockNFTDescriptor)21110": {
            "label": "contract ILockNFTDescriptor"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e2b730b7846967d5ad373694cb1ebbc3ac6ba2cc5787041c44bdbdcbcc5f1ede": {
      "address": "0x8601fF6ABfA65e1970F95701522bbF5249a4d0a2",
      "txHash": "0x6e5ec056b9cd711ffaa098fe7fc1809539f7b8c91066a318065320ca34f3aee2",
      "layout": {
        "storage": [
          {
            "contract": "FujiPriceAware",
            "label": "maxDelay",
            "type": "t_uint256",
            "src": "contracts\\fantom\\nft-bonds\\FujiPriceAware.sol:10"
          },
          {
            "contract": "FujiPriceAware",
            "label": "_trustedSigner",
            "type": "t_address",
            "src": "contracts\\fantom\\nft-bonds\\FujiPriceAware.sol:11"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "NFTInteractions",
            "label": "isRedstoneOracleOn",
            "type": "t_bool",
            "src": "contracts\\fantom\\nft-bonds\\NFTInteractions.sol:73"
          },
          {
            "contract": "NFTInteractions",
            "label": "_crateRewards",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\fantom\\nft-bonds\\NFTInteractions.sol:76"
          },
          {
            "contract": "NFTInteractions",
            "label": "_probabilityIntervals",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\fantom\\nft-bonds\\NFTInteractions.sol:78"
          },
          {
            "contract": "NFTInteractions",
            "label": "nftGame",
            "type": "t_contract(NFTGame)6829",
            "src": "contracts\\fantom\\nft-bonds\\NFTInteractions.sol:80"
          },
          {
            "contract": "NFTInteractions",
            "label": "_pointsID",
            "type": "t_uint256",
            "src": "contracts\\fantom\\nft-bonds\\NFTInteractions.sol:81"
          },
          {
            "contract": "NFTInteractions",
            "label": "_nftgame_GAME_ADMIN",
            "type": "t_bytes32",
            "src": "contracts\\fantom\\nft-bonds\\NFTInteractions.sol:82"
          },
          {
            "contract": "NFTInteractions",
            "label": "preTokenBonds",
            "type": "t_contract(PreTokenBonds)8845",
            "src": "contracts\\fantom\\nft-bonds\\NFTInteractions.sol:84"
          },
          {
            "contract": "NFTInteractions",
            "label": "cratePrices",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\fantom\\nft-bonds\\NFTInteractions.sol:87"
          },
          {
            "contract": "NFTInteractions",
            "label": "cardBoost",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\fantom\\nft-bonds\\NFTInteractions.sol:90"
          },
          {
            "contract": "NFTInteractions",
            "label": "mintedCards",
            "type": "t_uint256",
            "src": "contracts\\fantom\\nft-bonds\\NFTInteractions.sol:93"
          },
          {
            "contract": "NFTInteractions",
            "label": "cardsCapTimestamp",
            "type": "t_uint256",
            "src": "contracts\\fantom\\nft-bonds\\NFTInteractions.sol:95"
          },
          {
            "contract": "NFTInteractions",
            "label": "cardsPerDayRatio",
            "type": "t_uint256",
            "src": "contracts\\fantom\\nft-bonds\\NFTInteractions.sol:97"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_contract(NFTGame)6829": {
            "label": "contract NFTGame"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(PreTokenBonds)8845": {
            "label": "contract PreTokenBonds"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "08eea2a60c561c7d02741dcad2ef6819fe613318b8146b2b2481125cfd603b4e": {
      "address": "0x3381F86523f2Abc0E490321A40199CaADA1519db",
      "txHash": "0xbef5befb47de4233e15fae3537ce86e035d653dc200581e5e8d66b1040d911d2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "VNFTCoreV2",
            "label": "_units",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\fantom\\nft-bonds\\utils\\VNFTCoreV2.sol:22"
          },
          {
            "contract": "VNFTCoreV2",
            "label": "_tokenApprovalUnits",
            "type": "t_mapping(t_uint256,t_struct(ApproveUnits)24147_storage)",
            "src": "contracts\\fantom\\nft-bonds\\utils\\VNFTCoreV2.sol:25"
          },
          {
            "contract": "VNFTCoreV2",
            "label": "_slotTokens",
            "type": "t_mapping(t_uint256,t_struct(UintSet)6893_storage)",
            "src": "contracts\\fantom\\nft-bonds\\utils\\VNFTCoreV2.sol:28"
          },
          {
            "contract": "VNFTCoreV2",
            "label": "_unitDecimals",
            "type": "t_uint8",
            "src": "contracts\\fantom\\nft-bonds\\utils\\VNFTCoreV2.sol:30"
          },
          {
            "contract": "VoucherCore",
            "label": "voucherSlotMapping",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\fantom\\nft-bonds\\utils\\VoucherCore.sol:9"
          },
          {
            "contract": "VoucherCore",
            "label": "nextTokenId",
            "type": "t_uint32",
            "src": "contracts\\fantom\\nft-bonds\\utils\\VoucherCore.sol:11"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "PreTokenBonds",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\fantom\\nft-bonds\\PreTokenBonds.sol:34"
          },
          {
            "contract": "PreTokenBonds",
            "label": "nftGame",
            "type": "t_contract(NFTGame)19472",
            "src": "contracts\\fantom\\nft-bonds\\PreTokenBonds.sol:36"
          },
          {
            "contract": "PreTokenBonds",
            "label": "_nftgame_GAME_ADMIN",
            "type": "t_bytes32",
            "src": "contracts\\fantom\\nft-bonds\\PreTokenBonds.sol:37"
          },
          {
            "contract": "PreTokenBonds",
            "label": "_nftgame_GAME_INTERACTOR",
            "type": "t_bytes32",
            "src": "contracts\\fantom\\nft-bonds\\PreTokenBonds.sol:38"
          },
          {
            "contract": "PreTokenBonds",
            "label": "underlying",
            "type": "t_address",
            "src": "contracts\\fantom\\nft-bonds\\PreTokenBonds.sol:40"
          },
          {
            "contract": "PreTokenBonds",
            "label": "_bondSlotTimes",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\fantom\\nft-bonds\\PreTokenBonds.sol:42"
          },
          {
            "contract": "PreTokenBonds",
            "label": "bondSlotMultiplier",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\fantom\\nft-bonds\\PreTokenBonds.sol:45"
          },
          {
            "contract": "PreTokenBonds",
            "label": "bondPrice",
            "type": "t_uint256",
            "src": "contracts\\fantom\\nft-bonds\\PreTokenBonds.sol:47"
          },
          {
            "contract": "PreTokenBonds",
            "label": "voucherDescriptor",
            "type": "t_contract(IVNFTDescriptor)21227",
            "src": "contracts\\fantom\\nft-bonds\\PreTokenBonds.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(NFTGame)19472": {
            "label": "contract NFTGame"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_contract(IVNFTDescriptor)21227": {
            "label": "contract IVNFTDescriptor"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_uint256,t_struct(ApproveUnits)24147_storage)": {
            "label": "mapping(uint256 => struct VNFTCoreV2.ApproveUnits)"
          },
          "t_struct(ApproveUnits)24147_storage": {
            "label": "struct VNFTCoreV2.ApproveUnits",
            "members": [
              {
                "label": "approvals",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "allowances",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_struct(UintSet)6893_storage)": {
            "label": "mapping(uint256 => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)6893_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)6435_storage"
              }
            ]
          },
          "t_struct(Set)6435_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2c56aedfdf56b7dde27e312f136df5b432a2bb95969db1478af6450ce0106a9e": {
      "address": "0x3d061c65E06f45343f64ae1bB37b83775c43ff28",
      "txHash": "0x157637c086c30958e9c35df354955f75d4028fbd49964de0abf0d13914075219",
      "layout": {
        "storage": [
          {
            "contract": "FujiPriceAware",
            "label": "maxDelay",
            "type": "t_uint256",
            "src": "contracts\\fantom\\nft-bonds\\FujiPriceAware.sol:10"
          },
          {
            "contract": "FujiPriceAware",
            "label": "_trustedSigner",
            "type": "t_address",
            "src": "contracts\\fantom\\nft-bonds\\FujiPriceAware.sol:11"
          },
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "NFTInteractions",
            "label": "isRedstoneOracleOn",
            "type": "t_bool",
            "src": "contracts\\fantom\\nft-bonds\\NFTInteractions.sol:73"
          },
          {
            "contract": "NFTInteractions",
            "label": "_crateRewards",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "src": "contracts\\fantom\\nft-bonds\\NFTInteractions.sol:76"
          },
          {
            "contract": "NFTInteractions",
            "label": "_probabilityIntervals",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\fantom\\nft-bonds\\NFTInteractions.sol:78"
          },
          {
            "contract": "NFTInteractions",
            "label": "nftGame",
            "type": "t_contract(NFTGame)6829",
            "src": "contracts\\fantom\\nft-bonds\\NFTInteractions.sol:80"
          },
          {
            "contract": "NFTInteractions",
            "label": "_pointsID",
            "type": "t_uint256",
            "src": "contracts\\fantom\\nft-bonds\\NFTInteractions.sol:81"
          },
          {
            "contract": "NFTInteractions",
            "label": "_nftgame_GAME_ADMIN",
            "type": "t_bytes32",
            "src": "contracts\\fantom\\nft-bonds\\NFTInteractions.sol:82"
          },
          {
            "contract": "NFTInteractions",
            "label": "preTokenBonds",
            "type": "t_contract(PreTokenBonds)8851",
            "src": "contracts\\fantom\\nft-bonds\\NFTInteractions.sol:84"
          },
          {
            "contract": "NFTInteractions",
            "label": "cratePrices",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\fantom\\nft-bonds\\NFTInteractions.sol:87"
          },
          {
            "contract": "NFTInteractions",
            "label": "cardBoost",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\fantom\\nft-bonds\\NFTInteractions.sol:90"
          },
          {
            "contract": "NFTInteractions",
            "label": "mintedCards",
            "type": "t_uint256",
            "src": "contracts\\fantom\\nft-bonds\\NFTInteractions.sol:93"
          },
          {
            "contract": "NFTInteractions",
            "label": "cardsCapTimestamp",
            "type": "t_uint256",
            "src": "contracts\\fantom\\nft-bonds\\NFTInteractions.sol:95"
          },
          {
            "contract": "NFTInteractions",
            "label": "cardsPerDayRatio",
            "type": "t_uint256",
            "src": "contracts\\fantom\\nft-bonds\\NFTInteractions.sol:97"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_contract(NFTGame)6829": {
            "label": "contract NFTGame"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(PreTokenBonds)8851": {
            "label": "contract PreTokenBonds"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "eaa5cc5048701ae4b136e75440df86e9f1e5b2b4b59aeee573770876b569f041": {
      "address": "0xdb77dA1B44907d6Bc29c5A51587AEb0cb02c753b",
      "txHash": "0xcd3210795dd7d838a3f3d30f705bf0bfd11854881a484e16033424be9a6a9f7a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:475"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "NFTGame",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts\\fantom\\nft-bonds\\NFTGame.sol:67"
          },
          {
            "contract": "NFTGame",
            "label": "nftCardsAmount",
            "type": "t_uint256",
            "src": "contracts\\fantom\\nft-bonds\\NFTGame.sol:68"
          },
          {
            "contract": "NFTGame",
            "label": "userdata",
            "type": "t_mapping(t_address,t_struct(UserData)17930_storage)",
            "src": "contracts\\fantom\\nft-bonds\\NFTGame.sol:70"
          },
          {
            "contract": "NFTGame",
            "label": "isClaimed",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\fantom\\nft-bonds\\NFTGame.sol:73"
          },
          {
            "contract": "NFTGame",
            "label": "totalSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\fantom\\nft-bonds\\NFTGame.sol:76"
          },
          {
            "contract": "NFTGame",
            "label": "validVaults",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts\\fantom\\nft-bonds\\NFTGame.sol:79"
          },
          {
            "contract": "NFTGame",
            "label": "gamePhaseTimestamps",
            "type": "t_array(t_uint256)4_storage",
            "src": "contracts\\fantom\\nft-bonds\\NFTGame.sol:86"
          },
          {
            "contract": "NFTGame",
            "label": "lockNFTdesc",
            "type": "t_contract(ILockNFTDescriptor)21216",
            "src": "contracts\\fantom\\nft-bonds\\NFTGame.sol:88"
          },
          {
            "contract": "NFTGame",
            "label": "contractURI",
            "type": "t_string_storage",
            "src": "contracts\\fantom\\nft-bonds\\NFTGame.sol:94"
          },
          {
            "contract": "NFTGame",
            "label": "_owner",
            "type": "t_address",
            "src": "contracts\\fantom\\nft-bonds\\NFTGame.sol:96"
          },
          {
            "contract": "NFTGame",
            "label": "numPlayers",
            "type": "t_uint256",
            "src": "contracts\\fantom\\nft-bonds\\NFTGame.sol:98"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(UserData)17930_storage)": {
            "label": "mapping(address => struct NFTGame.UserData)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(UserData)17930_storage": {
            "label": "struct NFTGame.UserData",
            "members": [
              {
                "label": "lastTimestampUpdate",
                "type": "t_uint64"
              },
              {
                "label": "rateOfAccrual",
                "type": "t_uint64"
              },
              {
                "label": "accruedPoints",
                "type": "t_uint128"
              },
              {
                "label": "recordedDebtBalance",
                "type": "t_uint128"
              },
              {
                "label": "finalScore",
                "type": "t_uint128"
              },
              {
                "label": "gearsCollected",
                "type": "t_uint128"
              },
              {
                "label": "lockedNFTID",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)4_storage": {
            "label": "uint256[4]"
          },
          "t_contract(ILockNFTDescriptor)21216": {
            "label": "contract ILockNFTDescriptor"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
